import { SplitData } from "../data/splitData";
import { D3Scale, Settings } from "../types";
export type AltDataWithScale = {
    data: SplitData[][];
    yScale: D3Scale;
};
export interface SizeArg {
    (arg: any): any;
    copy: () => any;
}
interface NearbyTip {
    (selection: any): void;
    scaleFactor(): number;
    scaleFactor(scaleFactor: number): NearbyTip;
    settings(): Settings;
    settings(settings: Settings): NearbyTip;
    xScale(): D3Scale;
    xScale(xScale: D3Scale): NearbyTip;
    yScale(): D3Scale;
    yScale(yScale: D3Scale): NearbyTip;
    color(): D3Scale;
    color(color: D3Scale): NearbyTip;
    size(): SizeArg;
    size(size: SizeArg): NearbyTip;
    canvas(): boolean;
    canvas(canvas: boolean): NearbyTip;
    data(): Record<string, any>[][];
    data(data: Record<string, any>[][]): NearbyTip;
    xValueName(): string;
    xValueName(xValueName: string): NearbyTip;
    yValueName(): string;
    yValueName(yValueName: string): NearbyTip;
    altDataWithScale(): AltDataWithScale;
    altDataWithScale(altDataWithScale: AltDataWithScale): NearbyTip;
}
declare const _default: () => NearbyTip;
export default _default;
