import * as d3 from "d3";
import { Settings } from "../types";
export declare function seriesColors(settings: Settings): d3.ScaleOrdinal<string, unknown> | null;
export declare function seriesColorsFromColumn(settings: Settings, column: any): d3.ScaleOrdinal<string, unknown> | null;
export declare function seriesColorsFromDistinct(settings: Settings, data: any): d3.ScaleOrdinal<string, unknown> | null;
export declare function seriesColorsFromGroups(settings: Settings): d3.ScaleOrdinal<string, unknown> | null;
type ColorScaleMapFunc = (d: any) => string;
interface ColorScale {
    (): d3.ScaleOrdinal<string, unknown> | null;
    settings(): Settings;
    settings(nextSettings: Settings): ColorScale;
    domain(): any[];
    domain(nextDomain: any[]): ColorScale;
    defaultColors(): string[];
    defaultColors(nextDefaultColors: string[]): ColorScale;
    mapFunction(): ColorScaleMapFunc;
    mapFunction(nextMapFunction: ColorScaleMapFunc): ColorScale;
}
export declare function colorScale(): ColorScale;
export declare function withoutOpacity(color: any): string;
export declare function withOpacity(color: any, opacity?: number): string;
export declare function setOpacity(opacity: any): (color: any) => string;
export {};
