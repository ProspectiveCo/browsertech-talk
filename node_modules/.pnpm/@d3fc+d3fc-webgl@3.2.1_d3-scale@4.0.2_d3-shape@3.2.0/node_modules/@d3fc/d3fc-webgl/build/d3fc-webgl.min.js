!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@d3fc/d3fc-rebind"),require("d3-scale"),require("d3-shape")):"function"==typeof define&&define.amd?define(["exports","@d3fc/d3fc-rebind","d3-scale","d3-shape"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).fc=e.fc||{},e.fc,e.d3,e.d3)}(this,(function(e,n,t,a){"use strict";var r=function(){var e=[0,1],n=[-1,1],t=function(){};return t.domain=function(){return arguments.length?(e=arguments.length<=0?void 0:arguments[0],t):e},t.range=function(){return arguments.length?(n=arguments.length<=0?void 0:arguments[0],t):n},t},i=function(){var e={},n={},t=null,a=function(a,r){var i=a.context();Object.keys(e).forEach((function(n){var t=e[n];if("function"!=typeof t)throw new Error("Expected an attribute for ".concat(n,", found ").concat(t));var o=i.getAttribLocation(r,n);t.location(o)(a)})),Object.keys(n).forEach((function(e){var t=n[e];if("function"!=typeof t)throw new Error("Expected a uniform for ".concat(e,", found ").concat(t));var o=i.getUniformLocation(r,e);t.location(o)(a)})),null!==t&&t(a)};return a.flush=function(){Object.values(e).forEach((function(e){return e.clear()})),Object.values(n).forEach((function(e){return e.clear()})),null!==t&&t.clear()},a.attribute=function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return 1===t.length?e[t[0]]:(e[t[0]]=t[1],a)},a.uniform=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return 1===t.length?n[t[0]]:(n[t[0]]=t[1],a)},a.elementIndices=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],a):t},a},o=function(e){var n=-1,t=e,a=!0,r=function(e){if(a){var r=e.context();if(Array.isArray(t))switch(t.length){case 1:r.uniform1fv(n,t);break;case 2:r.uniform2fv(n,t);break;case 3:r.uniform3fv(n,t);break;case 4:r.uniform4fv(n,t);break;default:throw new Error("Uniform supports up to 4 elements. ".concat(t.length," provided."))}else r.uniform1f(n,t);a=!1}};return r.clear=function(){a=!0},r.location=function(){return arguments.length?(n!==(arguments.length<=0?void 0:arguments[0])&&(n=arguments.length<=0?void 0:arguments[0],a=!0),r):n},r.data=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],a=!0,r):t},r},u=0,l=4,f=function(){var e=null,n=null,t=null,a=null,r=null,u=null,f=l,d=0,c=i(),s=!1,v=null,g=!0,b=1,h=function i(l){if(null!=e){var h=t(),y=a();if(function(e,n,t){if(!e||g)return!0;return n!==r||t!==u}(n,h,y)&&(n=function(n,t){var a=p(n,e.VERTEX_SHADER),r=p(t,e.FRAGMENT_SHADER),i=e.createProgram();if(e.attachShader(i,a),e.attachShader(i,r),e.linkProgram(i),s&&!e.getProgramParameter(i,e.LINK_STATUS)){var o=e.getProgramInfoLog(i);throw e.deleteProgram(i),new Error("Failed to link program : ".concat(o,"\n            Vertex Shader : ").concat(n,"\n            Fragment Shader : ").concat(t))}return i}(h,y),r=h,u=y,g=!1),e.useProgram(n),c.uniform("uScreen",o([e.canvas.width/b,e.canvas.height/b])),c(i,n),0===d)null==c.elementIndices()?e.drawArrays(f,0,l):e.drawElements(f,l,e.UNSIGNED_SHORT,0);else if(null==c.elementIndices())v.drawArraysInstancedANGLE(f,0,d,l);else{var S=c.elementIndices().data().length;if(d!==S)throw new Error("Expected elementIndices length ".concat(S)+" to match subInstanceCount ".concat(d,"."));v.drawElementsInstancedANGLE(f,d,e.UNSIGNED_SHORT,0,l)}}};return h.extInstancedArrays=function(){return v},h.context=function(){for(var n=arguments.length,t=new Array(n),a=0;a<n;a++)t[a]=arguments[a];return t.length?(null!=t[0]&&t[0]===e||(c.flush(),g=!0),null!=t[0]&&t[0]!==e&&(v=t[0].getExtension("ANGLE_instanced_arrays")),e=t[0],h):e},h.buffers=function(){return arguments.length?(c=arguments.length<=0?void 0:arguments[0],h):c},h.vertexShader=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],h):t},h.fragmentShader=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],h):a},h.mode=function(){return arguments.length?(f=arguments.length<=0?void 0:arguments[0],h):f},h.subInstanceCount=function(){return arguments.length?(d=arguments.length<=0?void 0:arguments[0],h):d},h.debug=function(){return arguments.length?(s=arguments.length<=0?void 0:arguments[0],h):s},h.pixelRatio=function(){return arguments.length?(b=arguments.length<=0?void 0:arguments[0],h):b},h;function p(n,t){var a=e.createShader(t);if(e.shaderSource(a,n),e.compileShader(a),s&&!e.getShaderParameter(a,e.COMPILE_STATUS)){var r=e.getShaderInfoLog(a);throw e.deleteShader(a),new Error("Failed to compile shader : ".concat(r,"\n            Shader : ").concat(n))}return a}},d=function(e){var n=[],t=[],a=function(){return e(n.join("\n"),t.join("\n"))};function r(e,n){e.push(n)}function i(e,n,t){var a=e.indexOf(t);e.splice(a>=0?a:e.length,0,n)}function o(e,n){-1===e.indexOf(n)&&e.push(n)}return a.appendHeader=function(e){return r(n,e),a},a.insertHeader=function(e,t){return i(n,e,t),a},a.appendHeaderIfNotExists=function(e){return o(n,e),a},a.appendBody=function(e){return r(t,e),a},a.insertBody=function(e,n){return i(t,e,n),a},a.appendBodyIfNotExists=function(e){return o(t,e),a},a},c=function(e,n){return"\nprecision mediump float;\nfloat inf = 1.0 / 0.0;\n".concat(e,"\nvoid main() {\n    ").concat(n,"\n}")},s=function(e,n){return"\nprecision mediump float;\n".concat(e,"\nvoid main() {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    ").concat(n,"\n}")},v="attribute vec4 aFillColor;\n             varying vec4 vFillColor;",g="vFillColor = aFillColor;",b="attribute vec4 aStrokeColor;\n             varying vec4 vStrokeColor;",h="vStrokeColor = aStrokeColor;",p="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",y="\n        vDefined = aDefined;\n        vSize = 2.0 * sqrt(aSize / 3.14159);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",S="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",x="\n        vDefined = aDefined;\n        vSize = 4.0 * sqrt(aSize / 3.14159);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",m="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",V="\n        vDefined = aDefined;\n        vSize = 3.0 * sqrt(aSize / 3.14159);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",C="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",w="\n        vDefined = aDefined;\n        vSize = sqrt(aSize);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",E="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",D="\n        vDefined = aDefined;\n        vSize = sqrt(aSize);\n        gl_PointSize = 2.0 * (vSize + uStrokeWidth + 1.0);\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",A="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",B="\n        vDefined = aDefined;\n        vSize = sqrt((16.0 * aSize) / (3.0 * sqrt(3.0)));\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",z="\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vStrokeWidthRatio;\n        varying float vDefined;",N="\n        vDefined = aDefined;\n        vSize = 3.0 * sqrt(aSize / 5.0);\n        vStrokeWidthRatio = uStrokeWidth / (vSize + uStrokeWidth + 1.0);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);",_="\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aOpenValue;\n        attribute float aCloseValue;\n        attribute float aLowValue;\n        attribute vec3 aCorner;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vColorIndicator;\n        varying float vDefined;",P="\n        vDefined = aDefined;\n        vColorIndicator = sign(aCloseValue - aOpenValue);\n\n        float isPositiveY = (sign(aCorner.y) + 1.0) / 2.0;\n        float isNotPositiveY = 1.0 - isPositiveY;\n        float isExtremeY = abs(aCorner.y) - 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n        float yValue =\n         (isPositiveY * isExtremeY * aLowValue) +\n         (isPositiveY * isNotExtremeY * aCloseValue) +\n         (isNotPositiveY * isNotExtremeY * aOpenValue) +\n         (isNotPositiveY * isExtremeY * aHighValue);\n\n        float lineWidthXDirection = (isNotExtremeY * aCorner.x) + (isExtremeY * aCorner.z);\n\n        float bodyThickness = (aOpenValue == aCloseValue ? 1.0 : sign(aCloseValue - aOpenValue));\n        float lineWidthYDirection = (isNotExtremeY * bodyThickness * aCorner.y);\n\n        float bandwidthModifier = aBandwidth * aCorner.x / 2.0;\n\n        float xModifier = (uStrokeWidth * lineWidthXDirection / 2.0) + bandwidthModifier;\n        float yModifier = uStrokeWidth * lineWidthYDirection / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);",Y="\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aOpenValue;\n        attribute float aCloseValue;\n        attribute float aLowValue;\n        attribute vec3 aCorner;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vColorIndicator;\n        varying float vDefined;",I="\n        vDefined = aDefined;\n        vColorIndicator = sign(aCloseValue - aOpenValue);\n\n        float isPositiveY = (sign(aCorner.y) + 1.0) / 2.0;\n        float isNotPositiveY = 1.0 - isPositiveY;\n        float isExtremeY = abs(aCorner.y) - 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n        float yValue =\n            (isPositiveY * isExtremeY * aLowValue) +\n            (isPositiveY * isNotExtremeY * aCloseValue) +\n            (isNotPositiveY * isNotExtremeY * aOpenValue) +\n            (isNotPositiveY * isExtremeY * aHighValue);\n\n        float lineWidthXDirection = isExtremeY * aCorner.z;\n        float lineWidthYDirection = isNotExtremeY * aCorner.z;\n\n        float bandwidthModifier = isNotExtremeY * aCorner.x * aBandwidth / 2.0;\n\n        float xModifier = (uStrokeWidth * lineWidthXDirection / 2.0) + bandwidthModifier;\n        float yModifier = uStrokeWidth * lineWidthYDirection / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);",k="\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aMainValue;\n        attribute float aBaseValue;\n        attribute vec2 aCorner;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vDefined;",M="\n        vDefined = aDefined;\n        float isBaseline = (1.0 - aCorner.y) / 2.0;\n        float yValue = (isBaseline * aBaseValue) + ((1.0 - isBaseline) * aMainValue);\n\n        float xModifier = aCorner.x * (aBandwidth) / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);",H="\n        attribute vec3 aCorner;\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aLowValue;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vDefined;",F="\n        vDefined = aDefined;\n        float isLow = (aCorner.y + 1.0) / 2.0;\n        float yValue = isLow * aLowValue + (1.0 - isLow) * aHighValue;\n\n        float isEdgeCorner = abs(aCorner.x);\n        float lineWidthXDirection = (1.0 - isEdgeCorner) * aCorner.z;\n        float lineWidthYDirection = isEdgeCorner * aCorner.z;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);\n\n        float xModifier = (uStrokeWidth * lineWidthXDirection) + (aBandwidth * aCorner.x / 2.0);\n        float yModifier = (uStrokeWidth * lineWidthYDirection);",W="\n        attribute vec3 aCorner;\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aCrossNextValue;\n        attribute float aMainNextValue;\n        attribute float aBaseValue;\n        attribute float aBaseNextValue;\n        attribute float aDefined;\n        attribute float aDefinedNext;\n\n        varying float vDefined;\n\n        float when_lt(float a, float b) {\n            return max(sign(b - a), 0.0);\n        }\n\n        float and(float a, float b) {\n            return a * b;\n        }",T="\n        vDefined = aDefined * aDefinedNext;\n        gl_Position = vec4(0, 0, 0, 1);\n\n        float hasIntercepted = when_lt((aMainNextValue - aBaseNextValue) * (aMainValue - aBaseValue), 0.0);\n        float useIntercept = and(aCorner.z, hasIntercepted);\n\n        float yGradient = (aMainNextValue - aMainValue) / (aCrossNextValue - aCrossValue);\n        float yConstant = aMainNextValue - (yGradient * aCrossNextValue);\n\n        float y0Gradient = (aBaseNextValue - aBaseValue) / (aCrossNextValue - aCrossValue);\n        float y0Constant = aBaseNextValue - (y0Gradient * aCrossNextValue);\n\n        float denominator = (yGradient - y0Gradient) + step(abs(yGradient - y0Gradient), 0.0);\n        float interceptXValue = (y0Constant - yConstant) / denominator;\n        float interceptYValue = (yGradient * interceptXValue) + yConstant;\n\n        gl_Position = vec4(interceptXValue * useIntercept, interceptYValue * useIntercept, 0, 1);\n\n        gl_Position.x += (1.0 - useIntercept) * ((aCorner.x * aCrossNextValue) + ((1.0 - aCorner.x) * aCrossValue));\n        gl_Position.y += (1.0 - useIntercept) * (1.0 - aCorner.y) * ((aCorner.x * aMainNextValue) + ((1.0 - aCorner.x) * aMainValue));\n        gl_Position.y += (1.0 - useIntercept) * aCorner.y * ((aCorner.x * aBaseNextValue) + ((1.0 - aCorner.x) * aBaseValue));",R="\n        attribute vec4 aCorner;\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aCapWidth;\n        attribute float aHighValue;\n        attribute float aUpperQuartileValue;\n        attribute float aMedianValue;\n        attribute float aLowerQuartileValue;\n        attribute float aLowValue;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vDefined;\n    ",L="\n        vDefined = aDefined;\n        float isExtremeY = sign(abs(aCorner.y) - 2.0) + 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n\n        float isNonZeroY = abs(sign(aCorner.y));\n        float isZeroY = 1.0 - isNonZeroY;\n\n        float isQuartileY = isNotExtremeY * isNonZeroY;\n\n        float isPositiveY = (sign(aCorner.y + 0.5) + 1.0) / 2.0;\n        float isNegativeY = 1.0 - isPositiveY;\n\n        float yValue =\n          (isExtremeY * isNegativeY) * aHighValue +\n          (isQuartileY * isNegativeY) * aUpperQuartileValue +\n          isZeroY * aMedianValue +\n          (isQuartileY * isPositiveY) * aLowerQuartileValue +\n          (isExtremeY * isPositiveY) * aLowValue;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);\n\n        float isHorizontal = aCorner.w;\n        float isVertical = 1.0 - isHorizontal;\n\n        float xDisplacement = aCorner.x * (isExtremeY * aCapWidth + isNotExtremeY * aBandwidth) / 2.0;\n\n        float xModifier = (isVertical * uStrokeWidth * aCorner.z / 2.0) + xDisplacement;\n        float yModifier = isHorizontal * uStrokeWidth * aCorner.z / 2.0;",O="\n        varying float vSize;\n        varying float vDefined;",U="\n        float canFill = 1.0;\n        float distance = length(2.0 * gl_PointCoord - 1.0);\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n            return;\n        }",G="\n        varying float vSize;\n        varying float vDefined;\n\n        // anterior, exterior angles\n        float an = 0.628319;\n        vec2 acs = vec2(0.809017, 0.587786); // (cos, sin)\n        float en = 0.952000;\n        vec2 ecs = vec2(0.580055, 0.814577);\n    ",q="\n        float canFill = 1.0;\n\n        vec2 p = 2.0 * gl_PointCoord - 1.0;\n        p.y *= -1.0;\n\n        // sector\n        float bn = mod(atan(p.x, p.y), 2.0 * an) - an;\n        p = length(p) * vec2(cos(bn), abs(sin(bn)));\n\n        p -= acs;\n        p += ecs * clamp(-dot(p, ecs), 0.0, acs.y / ecs.y);\n        float d = length(p) * sign(p.x);\n\n        float distance = 1.0 + d;\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n            return;\n        }",X="\n        varying float vSize;\n        varying float vDefined;\n    ",Q="\n        float canFill = 1.0;\n\n        vec2 p = 2.0 * gl_PointCoord - 1.0;\n        p.y *= -1.0;\n\n        // sector\n        float an = 3.141593 / 3.0;\n        float bn = mod(atan(p.x, p.y), 2.0 * an) - an;\n        p = length(p) * vec2(cos(bn), abs(sin(bn)));\n\n        // box\n        vec2 d = abs(p) - vec2(0.9, 0.35);\n        float sdf = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n\n        float distance = 1.0 + sdf;\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n            return;\n        }",j="\n        varying float vSize;\n        varying float vDefined;",Z="\n        float canFill = 1.0;\n        if (vDefined < 0.5) {\n            discard;\n        }\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float distance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);",K="\n        varying float vSize;\n        varying float vDefined;\n        float a = 0.6;\n        float b = 1.0;\n    ",J="\n        if (vDefined < 0.5) {\n            discard;\n        }\n\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n\n        float x = abs(pointCoordTransform.x);\n        float y = abs(pointCoordTransform.y);\n\n        float X = (a * b * x) / (a * y + b * x);\n        float Y = (a * b * y) / (a * y + b * x);\n\n        float distance = length(vec2(x, y)) / length(vec2(X, Y));\n\n        if (distance > 1.0) {\n            discard;\n        }\n    ",$="\n        varying float vSize;\n        varying float vDefined;",ee="\n        float canFill = 1.0;\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float topEdgesDistance = abs(pointCoordTransform.x) - ((pointCoordTransform.y - 0.6) / sqrt(3.0));\n        float bottomEdgeDistance = pointCoordTransform.y + 0.5;\n        float distance = max(topEdgesDistance, bottomEdgeDistance);\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n        }",ne="\n        varying float vSize;\n        varying float vStrokeWidthRatio;\n        varying float vDefined;",te="\n        float canFill = 1.0;\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float innerCornerDistance = min(abs(pointCoordTransform.x), abs(pointCoordTransform.y)) + 0.66 - vStrokeWidthRatio;\n        float outerEdgeDistance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));\n        float distance = max(innerCornerDistance, outerEdgeDistance);\n        float canStroke = smoothstep(vSize - 2.0, vSize, distance * vSize);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n        }",ae="\n        varying float vColorIndicator;\n        varying float vDefined;",re="\n        float canFill = 1.0;\n        float canStroke = 0.0;\n        if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.4, 0.8, 0, 1);\n        if (vColorIndicator < 0.0) {\n            gl_FragColor = vec4(0.8, 0.4, 0, 1);\n        }",ie="\n        varying float vColorIndicator;\n        varying float vDefined;",oe="\n        float canFill = 0.0;\n        float canStroke = 1.0;\n        if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.4, 0.8, 0, 1);\n        if (vColorIndicator < 0.0) {\n            gl_FragColor = vec4(0.8, 0.4, 0, 1);\n        }",ue="\n        varying float vDefined;",le="\n        float canFill = 1.0;\n        float canStroke = 0.0;\n        if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.86, 0.86, 0.86, 1);",fe="\n        varying float vDefined;\n    ",de="\n        float canFill = 0.0;\n        float canStroke = 1.0;\n\n        if (vDefined < 0.5) {\n            discard;\n        }",ce="varying float vDefined;",se="\n        float canFill = 0.0;\n        float canStroke = 1.0;\n        if (vDefined < 0.5) {\n            discard;\n        }",ve="varying float vDefined;",ge="\n        float canFill = 1.0;\n        float canStroke = 0.0;\n\n        gl_FragColor = vec4(0.60, 0.60, 0.60, 1.0);\n\n        if (vDefined < 0.5) {\n            discard;\n        }",be="varying vec4 vFillColor;",he="gl_FragColor = (canFill * vFillColor) + ((1.0 - canFill) * gl_FragColor);",pe="varying vec4 vStrokeColor;",ye="gl_FragColor = (canStroke * vStrokeColor) + ((1.0 - canStroke) * gl_FragColor);",Se=function(){var e=d(c),n=d(s);return e.appendHeader(W).appendBody(T),n.appendHeader(ue).appendBody(le),{vertex:function(){return e},fragment:function(){return n}}},xe={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,FLOAT:5126};function me(e){switch(e){case xe.BYTE:case xe.UNSIGNED_BYTE:return 1;case xe.SHORT:case xe.UNSIGNED_SHORT:return 2;case xe.FLOAT:return 4;default:throw new Error("Unknown type ".concat(e))}}function Ve(e){switch(e){case xe.BYTE:return Int8Array;case xe.UNSIGNED_BYTE:return Uint8Array;case xe.SHORT:return Int16Array;case xe.UNSIGNED_SHORT:return Uint16Array;case xe.FLOAT:return Float32Array;default:throw new Error("Unknown type ".concat(e))}}var Ce=function(){var e=-1,n=null,t=1,a=xe.FLOAT,r=!1,i=0,o=0,u=null,l=function(l){var f=l.context();null==n&&(n=f.createBuffer()),f.bindBuffer(f.ARRAY_BUFFER,n),f.vertexAttribPointer(e,t,a,r,i,o),f.enableVertexAttribArray(e),l.extInstancedArrays().vertexAttribDivisorANGLE(e,null!=u?u:l.subInstanceCount()>0?1:0)};return l.location=function(){return arguments.length?(e=arguments.length<=0?void 0:arguments[0],l):e},l.buffer=function(){return arguments.length?(n=arguments.length<=0?void 0:arguments[0],l):n},l.size=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],l):t},l.type=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],l):a},l.normalized=function(){return arguments.length?(r=arguments.length<=0?void 0:arguments[0],l):r},l.stride=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],l):i},l.offset=function(){return arguments.length?(o=arguments.length<=0?void 0:arguments[0],l):o},l.divisor=function(){return arguments.length?(u=arguments.length<=0?void 0:arguments[0],l):u},l},we=function(){var e=!0,n=1,t=xe.FLOAT,a=function(){var e=xe.FLOAT,n=new Float32Array(0),t=function(t){var a=Ve(e);return n.length>t?n=new a(n.buffer,0,t):n.length!==t&&(n=new a(t)),n};return t.type=function(){if(!arguments.length)return e;if(e!==(arguments.length<=0?void 0:arguments[0])){var a=Ve(e=arguments.length<=0?void 0:arguments[0]);n=new a(0)}return t},t}(),r=function(e,n){return e},i=null,o=function(){var o=i.length,u=a.type(t)(o*n);if(n>1)for(var l=0;l<o;l++){var f=r(i[l],l);if(f.length!==n)throw new Error("Expected components array of size ".concat(n,", recieved array with length ").concat(f.length,"."));for(var d=0;d<n;d++)u[l*n+d]=f[d]}else for(var c=0;c<o;c++){var s=r(i[c],c);if(Array.isArray(s))throw new Error("Expected a single component value, recieved array with length ".concat(s.length,"."));u[c]=s}return e=!1,u};return o.dirty=function(){return e},o.clear=function(){e=!0},o.size=function(){return arguments.length?(n=arguments.length<=0?void 0:arguments[0],e=!0,o):n},o.type=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],e=!0,o):t},o.arrayViewFactory=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],e=!0,o):a},o.value=function(){return arguments.length?(r=arguments.length<=0?void 0:arguments[0],e=!0,o):r},o.data=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],e=!0,o):i},o},Ee=function(){var e=Ce(),t=we(),a=function n(a){if(e.size(n.size()).type(n.type()),e(a),t.dirty()){var r=t(),i=a.context();i.bindBuffer(i.ARRAY_BUFFER,e.buffer()),i.bufferData(i.ARRAY_BUFFER,r,i.DYNAMIC_DRAW)}};return a.clear=function(){e.buffer(null),t.clear()},n.rebind(a,e,"normalized","location","divisor"),n.rebind(a,t,"data","value","size","type"),a},De=function(e,n,t,a){for(var r=arguments.length,i=new Array(r>4?r-4:0),o=4;o<r;o++)i[o-4]=arguments[o];e[n]=function(){for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];var u=t[a].apply(t,i.concat(r));return u===t?e:u}},Ae=function(){var e=d(c),n=d(s);return e.appendHeader(p).appendBody(y),n.appendHeader(O).appendBody(U),{vertex:function(){return e},fragment:function(){return n}}},Be=function(){var e=1,n=function(n){n.buffers().uniform("uStrokeWidth",o(e))};return n.lineWidth=function(){return arguments.length?(e=arguments.length<=0?void 0:arguments[0],n):e},n},ze=function(e){var n=null,t=e,a=!0,r=function(e){var r=e.context();null==n&&(n=r.createBuffer()),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,n),a&&(r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),r.STATIC_DRAW),a=!1)};return r.clear=function(){n=null,a=!0},r.data=function(){return arguments.length?(a=!0,t=arguments.length<=0?void 0:arguments[0],r):t},r},Ne=function(){var e=d(c),n=d(s);return e.appendHeader(Y).appendBody(I),n.appendHeader(ie).appendBody(oe),{vertex:function(){return e},fragment:function(){return n}}},_e=function(){var e=d(c),n=d(s);return e.appendHeader(k).appendBody(M),n.appendHeader(ve).appendBody(ge),{vertex:function(){return e},fragment:function(){return n}}},Pe=function(){var e=d(c),n=d(s);return e.appendHeader(H).appendBody(F),n.appendHeader(ce).appendBody(se),{vertex:function(){return e},fragment:function(){return n}}},Ye=function(){var e=d(c),n=d(s);return e.appendHeader(_).appendBody(P),n.appendHeader(ae).appendBody(re),{vertex:function(){return e},fragment:function(){return n}}},Ie=function(){var e=d(c),n=d(s);return e.appendHeader(R).appendBody(L),n.appendHeader(fe).appendBody(de),{vertex:function(){return e},fragment:function(){return n}}},ke=function(){var e=r(),t=function(e){return"linear".concat(e)},a=function(n,a,r){n.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(t(r),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(t(r),"Scale;")).appendBody("".concat(a," = ").concat(a," + ").concat(t(r),"Offset;")).appendBody("".concat(a," = ").concat(a," * ").concat(t(r),"Scale;"));var i=e.domain()[1]-e.domain()[0],u=e.range()[1]-e.range()[0],l=e.range()[0]*(i/u)-e.domain()[0],f=u/i,d=[0,0,0,0],c=[1,1,1,1];d[r]=l,c[r]=f,n.buffers().uniform("".concat(t(r),"Offset"),o(d)).uniform("".concat(t(r),"Scale"),o(c))};return n.rebindAll(a,e),a},Me=function(){var e=r(),t=10;function a(e,n){return Math.log10(e)/Math.log10(n)}var i=function(e){return"log".concat(e)},u=function(n,r,u){var l="".concat(i(u),"Offset + (").concat(i(u),"Scale * clamp(log(").concat(r,") / log(").concat(i(u),"Base), -inf, inf))");n.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Scale;")).appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Include;")).appendHeaderIfNotExists("uniform float ".concat(i(u),"Base;")).appendBody("".concat(r," = (").concat(i(u),"Include * (").concat(l,")) + ((1.0 - ").concat(i(u),"Include) * ").concat(r,");"));var f=a(e.domain()[1],t)-a(e.domain()[0],t),d=(e.range()[1]-e.range()[0])/f,c=e.range()[0]-d*a(e.domain()[0],t),s=[0,0,0,0],v=[0,0,0,0],g=[0,0,0,0];s[u]=c,v[u]=d,g[u]=1,n.buffers().uniform("".concat(i(u),"Offset"),o(s)).uniform("".concat(i(u),"Scale"),o(v)).uniform("".concat(i(u),"Include"),o(g)).uniform("".concat(i(u),"Base"),o(t))};return u.base=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],u):t},n.rebindAll(u,e),u},He=function(){var e=r(),t=1;function a(e,n){return Math.sign(e)*Math.pow(Math.abs(e),n)}var i=function(e){return"pow".concat(e)},u=function(n,r,u){var l="".concat(i(u),"Offset + (").concat(i(u),"Scale * sign(").concat(r,") * pow(abs(").concat(r,"), vec4(").concat(i(u),"Exp)))");n.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Scale;")).appendHeaderIfNotExists("uniform vec4 ".concat(i(u),"Include;")).appendHeaderIfNotExists("uniform float ".concat(i(u),"Exp;")).appendBody("".concat(r," = (").concat(i(u),"Include * (").concat(l,")) + ((1.0 - ").concat(i(u),"Include) * ").concat(r,");"));var f=a(e.domain()[1],t)-a(e.domain()[0],t),d=(e.range()[1]-e.range()[0])/f,c=e.range()[0]-d*a(e.domain()[0],t),s=[0,0,0,0],v=[0,0,0,0],g=[0,0,0,0];s[u]=c,v[u]=d,g[u]=1,n.buffers().uniform("".concat(i(u),"Offset"),o(s)).uniform("".concat(i(u),"Scale"),o(v)).uniform("".concat(i(u),"Include"),o(g)).uniform("".concat(i(u),"Exp"),o(t))};return u.exponent=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],u):t},n.rebindAll(u,e),u},Fe=t.scaleLinear().copy.toString(),We=t.scaleLog().copy.toString(),Te=t.scalePow().copy.toString(),Re=t.scaleTime().copy.toString(),Le=t.scaleIdentity(),Oe=Date.now(),Ue=function(e){return e-Oe},Ge=function(e){var t=Ce().divisor(1),a=e,r=!0,i=function(e){if(t(e),r){if(!Array.isArray(a))throw new Error("Expected an array, received: ".concat(a));if(a.length!==t.size())throw new Error("Expected array of length: ".concat(t.size(),", recieved array of length: ").concat(a.length));var n=e.context();n["vertexAttrib".concat(a.length,"fv")](t.location(),a),n.disableVertexAttribArray(t.location()),r=!1}};return i.clear=function(){r=!0},i.value=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],r=!0,i):a},n.rebind(i,t,"normalized","size","location"),i};e.webglAdjacentAttribute=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(e>0||t<0)throw new Error("Offset values (".concat(e," & ").concat(t,") must straddle 0 "));var a=Ce(),r=we(),i=function n(i){var o=n.size()*me(n.type()),u=Math.abs(e)*o;if(a.offset(u).size(n.size()).type(n.type()),a(i),r.dirty()){var l=r(),f=t*o,d=u+l.length*me(n.type())+f,c=i.context();c.bindBuffer(c.ARRAY_BUFFER,a.buffer()),c.bufferData(c.ARRAY_BUFFER,d,c.DYNAMIC_DRAW),c.bufferSubData(c.ARRAY_BUFFER,u,l)}};return i.offset=function(r){if(e>r||r>t)throw new Error("Requested offset ".concat(r," exceeds bounds (").concat(e," & ").concat(t,") "));var o=function(n){a.offset((r-e)*i.size()*me(i.type())),a(n)};return n.rebind(o,i,"clear","location"),o},i.clear=function(){a.buffer(null),r.clear()},n.rebind(i,a,"normalized","location","divisor"),n.rebind(i,r,"data","value","size","type"),i},e.webglAttribute=Ee,e.webglBaseAttribute=Ce,e.webglBufferBuilder=i,e.webglElementIndices=ze,e.webglFillColor=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,0,0,1],t=Ee().size(4),a=e,r=!0,i=function(e){if(e.vertexShader().appendHeaderIfNotExists(v).appendBodyIfNotExists(g),e.fragmentShader().appendHeaderIfNotExists(be).appendBodyIfNotExists(he),Array.isArray(a))e.buffers().attribute("aFillColor",Ge(a).size(4));else{if("function"!=typeof a)throw new Error("Expected value to be an array or function, received ".concat(a));if(!r)return;t.value(a),e.buffers().attribute("aFillColor",t)}r=!1};return i.value=function(){return arguments.length?(a!==(arguments.length<=0?void 0:arguments[0])&&(a=arguments.length<=0?void 0:arguments[0],r=!0),i):a},n.rebind(i,t,"data"),i},e.webglProgramBuilder=f,e.webglScaleLinear=ke,e.webglScaleLog=Me,e.webglScaleMapper=function(e){switch(e.copy.toString()){case Fe:return{scale:Le,webglScale:ke().domain(e.domain())};case Re:return{scale:Ue,webglScale:ke().domain(e.domain().map(Ue))};case We:return{scale:Le,webglScale:Me().domain(e.domain()).base(e.base())};case Te:return{scale:Le,webglScale:He().domain(e.domain()).exponent(e.exponent())};default:return{scale:e.copy(),webglScale:ke().domain(e.range())}}},e.webglScalePow=He,e.webglSeriesArea=function(){var e=f().mode(l).subInstanceCount(6),t=r(),a=r(),i=function(){},o=Ee().divisor(0).size(3).type(xe.UNSIGNED_BYTE).data([[0,0,0],[0,1,0],[1,1,1],[0,0,1],[1,0,0],[1,1,0]]);e.buffers().attribute("aCorner",o);var u=function(n){var r=Se();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),i(e),e(n-1)};return u.decorate=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],u):i},u.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],u):t},u.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],u):a},n.rebind(u,e,"context","pixelRatio"),De(u,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(u,"crossNextValueAttribute",e.buffers(),"attribute","aCrossNextValue"),De(u,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),De(u,"mainNextValueAttribute",e.buffers(),"attribute","aMainNextValue"),De(u,"baseValueAttribute",e.buffers(),"attribute","aBaseValue"),De(u,"baseNextValueAttribute",e.buffers(),"attribute","aBaseNextValue"),De(u,"definedAttribute",e.buffers(),"attribute","aDefined"),De(u,"definedNextAttribute",e.buffers(),"attribute","aDefinedNext"),u},e.webglSeriesBar=function(){var e=f().mode(l).subInstanceCount(6),t=r(),a=r(),i=function(){},o=Ee().divisor(0).size(2).type(xe.BYTE).data([[-1,-1],[1,1],[-1,1],[1,-1]]);e.buffers().elementIndices(ze([0,1,2,0,1,3])).attribute("aCorner",o);var u=function(n){var r=_e();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),e.vertexShader().appendBody("\n            gl_Position.x += xModifier / uScreen.x * 2.0;\n        "),i(e),e(n)};return u.decorate=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],u):i},u.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],u):t},u.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],u):a},n.rebind(u,e,"context","pixelRatio"),De(u,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(u,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),De(u,"baseValueAttribute",e.buffers(),"attribute","aBaseValue"),De(u,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),De(u,"definedAttribute",e.buffers(),"attribute","aDefined"),u},e.webglSeriesBoxPlot=function(){var e=f().mode(l).subInstanceCount(54),t=r(),a=r(),i=function(){},o=Be(),u=Ee().divisor(0).size(4).type(xe.BYTE).data([[-1,-2,-1,1],[1,-2,-1,1],[1,-2,1,1],[-1,-2,1,1],[0,-2,-1,0],[0,-2,1,0],[0,-1,1,0],[0,-1,-1,0],[-1,-1,-1,1],[1,-1,-1,1],[1,-1,1,1],[-1,-1,1,1],[-1,0,-1,1],[1,0,-1,1],[1,0,1,1],[-1,0,1,1],[-1,1,-1,1],[1,1,-1,1],[1,1,1,1],[-1,1,1,1],[-1,-1,-1,0],[-1,-1,1,0],[-1,1,1,0],[-1,1,-1,0],[1,-1,-1,0],[1,-1,1,0],[1,1,1,0],[1,1,-1,0],[0,2,-1,0],[0,2,1,0],[0,1,1,0],[0,1,-1,0],[-1,2,-1,1],[1,2,-1,1],[1,2,1,1],[-1,2,1,1]]);e.buffers().elementIndices(ze([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23,24,25,26,24,26,27,28,29,30,28,30,31,32,33,34,32,34,35])).attribute("aCorner",u);var d=function(n){var r=Ie();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),o(e),e.vertexShader().appendBody("\n            gl_Position.x += xModifier / uScreen.x * 2.0;\n            gl_Position.y += yModifier / uScreen.y * 2.0;\n        "),i(e),e(n)};return d.decorate=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],d):i},d.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],d):t},d.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],d):a},n.rebind(d,e,"context","pixelRatio"),n.rebind(d,o,"lineWidth"),De(d,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(d,"highValueAttribute",e.buffers(),"attribute","aHighValue"),De(d,"upperQuartileValueAttribute",e.buffers(),"attribute","aUpperQuartileValue"),De(d,"medianValueAttribute",e.buffers(),"attribute","aMedianValue"),De(d,"lowerQuartileValueAttribute",e.buffers(),"attribute","aLowerQuartileValue"),De(d,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),De(d,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),De(d,"capAttribute",e.buffers(),"attribute","aCapWidth"),De(d,"definedAttribute",e.buffers(),"attribute","aDefined"),d},e.webglSeriesCandlestick=function(){var e=f().mode(l).subInstanceCount(12),t=r(),a=r(),i=Be(),o=function(){},u=Ee().divisor(0).size(3).type(xe.BYTE).data([[0,2,1],[0,2,-1],[0,-2,-1],[0,-2,1],[1,-1,0],[-1,-1,0],[-1,1,0],[1,1,0]]);e.buffers().elementIndices(ze([0,1,2,0,3,2,4,5,6,4,7,6])).attribute("aCorner",u);var d=function(n){var r=Ye();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),i(e),e.vertexShader().appendBody("\n          gl_Position.x += xModifier / uScreen.x * 2.0;\n          gl_Position.y += yModifier / uScreen.y * 2.0;\n        "),o(e),e(n)};return d.decorate=function(){return arguments.length?(o=arguments.length<=0?void 0:arguments[0],d):o},d.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],d):t},d.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],d):a},n.rebind(d,e,"context","pixelRatio"),n.rebind(d,i,"lineWidth"),De(d,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(d,"openValueAttribute",e.buffers(),"attribute","aOpenValue"),De(d,"highValueAttribute",e.buffers(),"attribute","aHighValue"),De(d,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),De(d,"closeValueAttribute",e.buffers(),"attribute","aCloseValue"),De(d,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),De(d,"definedAttribute",e.buffers(),"attribute","aDefined"),d},e.webglSeriesErrorBar=function(){var e=f().mode(l).subInstanceCount(18),t=r(),a=r(),i=function(){},o=Be(),u=Ee().divisor(0).size(3).type(xe.BYTE).data([[0,1,1],[0,1,-1],[0,-1,-1],[0,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1],[-1,-1,1],[-1,1,-1],[-1,1,1],[1,1,1],[1,1,-1]]);e.buffers().elementIndices(ze([0,1,2,0,3,2,4,5,6,4,7,6,8,9,10,8,11,10])).attribute("aCorner",u);var d=function(n){var r=Pe();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),o(e),e.vertexShader().appendBody("\n                gl_Position.x += xModifier / uScreen.x * 2.0;\n                gl_Position.y += yModifier / uScreen.y * 2.0;\n            "),i(e),e(n)};return d.decorate=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],d):i},d.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],d):t},d.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],d):a},n.rebind(d,e,"context","pixelRatio"),n.rebind(d,o,"lineWidth"),De(d,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(d,"highValueAttribute",e.buffers(),"attribute","aHighValue"),De(d,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),De(d,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),De(d,"definedAttribute",e.buffers(),"attribute","aDefined"),d},e.webglSeriesLine=function(){var e=f().mode(l).subInstanceCount(6),t=r(),a=r(),i=function(){},o=Be(),u=Ee().divisor(0).size(4).type(xe.BYTE).data([[-1,1,1,0],[1,1,0,1],[1,-1,0,1],[-1,-1,1,0]]);e.buffers().elementIndices(ze([0,1,2,2,3,0])).attribute("aCorner",u);var v=function(n){var r=d(c),u=d(s);e.vertexShader(r).fragmentShader(u),r.appendHeader("\n            attribute vec4 aCorner;\n            attribute float aCrossValue;\n            attribute float aCrossNextValue;\n            attribute float aMainValue;\n            attribute float aMainNextValue;\n            attribute float aDefined;\n            attribute float aDefinedNext;\n\n            uniform float uStrokeWidth;\n            uniform vec2 uScreen;\n\n            varying float vLength;\n            varying vec2 vPosition;\n        "),r.appendBody("\n            vec4 value = vec4(aCrossValue, aMainValue, 0.0, 1.0);\n            vec4 nextValue = vec4(aCrossNextValue, aMainNextValue, 0.0, 1.0);\n        "),t(e,"value",0),t(e,"nextValue",0),a(e,"value",1),a(e,"nextValue",1),r.appendBody("\n            vec2 position = aCorner[2] * value.xy + aCorner[3] * nextValue.xy;\n\n            vec2 direction = normalize((nextValue.xy - value.xy) * uScreen);\n            vec2 normal = vec2(direction.y, -direction.x);\n            vec2 padding = ((uStrokeWidth / 2.0) / (uScreen / 2.0));\n            \n            padding *= aDefined * aDefinedNext;\n            position += (aCorner[0] * direction + aCorner[1] * normal) * padding;\n\n            gl_Position = vec4(position.x, position.y, 0.0, 1.0);\n\n            vLength = length((nextValue.xy - value.xy) * (uScreen / 2.0));\n            vPosition = aCorner.xy * (uStrokeWidth / 2.0);\n            vPosition.x += aCorner[3] * vLength;\n        "),u.appendHeader("\n            uniform float uStrokeWidth;\n            varying float vLength;\n            varying vec2 vPosition;\n\n            float canFill = 0.0;\n            float canStroke = 1.0;\n        "),u.appendBody("\n            vec2 position = vPosition;\n            position.x -= clamp(position.x, 0.0, vLength);\n            float sdf = length(position) - uStrokeWidth / 2.0;\n            if (sdf > 0.5) {\n                discard;\n            }\n        "),o(e),i(e),e(n-1)};return v.decorate=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],v):i},v.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],v):t},v.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],v):a},n.rebind(v,e,"context","pixelRatio"),n.rebind(v,o,"lineWidth"),De(v,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(v,"crossNextValueAttribute",e.buffers(),"attribute","aCrossNextValue"),De(v,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),De(v,"mainNextValueAttribute",e.buffers(),"attribute","aMainNextValue"),De(v,"definedAttribute",e.buffers(),"attribute","aDefined"),De(v,"definedNextAttribute",e.buffers(),"attribute","aDefinedNext"),v},e.webglSeriesOhlc=function(){var e=f().mode(l).subInstanceCount(18),t=r(),a=r(),i=Be(),o=function(){},u=Ee().divisor(0).size(3).type(xe.BYTE).data([[0,-2,-1],[0,-2,1],[0,2,1],[0,2,-1],[-1,-1,-1],[-1,-1,1],[0,-1,1],[0,-1,-1],[1,1,1],[0,1,1],[0,1,-1],[1,1,-1]]);e.buffers().elementIndices(ze([0,1,2,0,3,2,4,5,6,4,7,6,8,9,10,10,11,8])).attribute("aCorner",u);var d=function(n){var r=Ne();e.vertexShader(r.vertex()).fragmentShader(r.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),i(e),e.vertexShader().appendBody("\n          gl_Position.x += xModifier / uScreen.x * 2.0;\n          gl_Position.y += yModifier / uScreen.y * 2.0;\n        "),o(e),e(n)};return d.decorate=function(){return arguments.length?(o=arguments.length<=0?void 0:arguments[0],d):o},d.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],d):t},d.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],d):a},n.rebind(d,e,"context","pixelRatio"),n.rebind(d,i,"lineWidth"),De(d,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(d,"openValueAttribute",e.buffers(),"attribute","aOpenValue"),De(d,"highValueAttribute",e.buffers(),"attribute","aHighValue"),De(d,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),De(d,"closeValueAttribute",e.buffers(),"attribute","aCloseValue"),De(d,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),De(d,"definedAttribute",e.buffers(),"attribute","aDefined"),d},e.webglSeriesPoint=function(){var e=f().mode(u),t=r(),a=r(),i=Ae(),o=function(){},l=function(n){e.vertexShader(i.vertex()).fragmentShader(i.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),o(e),e(n)};return l.type=function(){return arguments.length?(i=arguments.length<=0?void 0:arguments[0],l):i},l.decorate=function(){return arguments.length?(o=arguments.length<=0?void 0:arguments[0],l):o},l.xScale=function(){return arguments.length?(t=arguments.length<=0?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=arguments.length<=0?void 0:arguments[0],l):a},n.rebind(l,e,"context","pixelRatio"),De(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),De(l,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),De(l,"sizeAttribute",e.buffers(),"attribute","aSize"),De(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglShaderBuilder=d,e.webglStrokeColor=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,0,0,1],t=Ee().size(4),a=e,r=!0,i=function(e){if(e.vertexShader().appendHeaderIfNotExists(b).appendBodyIfNotExists(h),e.fragmentShader().appendHeaderIfNotExists(pe).appendBodyIfNotExists(ye),Array.isArray(a))e.buffers().attribute("aStrokeColor",Ge(a).size(4));else{if("function"!=typeof a)throw new Error("Expected value to be an array or function, received ".concat(a));if(!r)return;t.value(a),e.buffers().attribute("aStrokeColor",t)}r=!1};return i.value=function(){return arguments.length?(a!==(arguments.length<=0?void 0:arguments[0])&&(a=arguments.length<=0?void 0:arguments[0],r=!0),i):a},n.rebind(i,t,"data"),i},e.webglSymbolMapper=function(e){switch(e){case a.symbolCircle:return Ae();case a.symbolSquare:return n=d(c),t=d(s),n.appendHeader(C).appendBody(w),t.appendHeader(j).appendBody(Z),{vertex:function(){return n},fragment:function(){return t}};case a.symbolTriangle:return function(){var e=d(c),n=d(s);return e.appendHeader(A).appendBody(B),n.appendHeader($).appendBody(ee),{vertex:function(){return e},fragment:function(){return n}}}();case a.symbolCross:return function(){var e=d(c),n=d(s);return e.appendHeader(z).appendBody(N),n.appendHeader(ne).appendBody(te),{vertex:function(){return e},fragment:function(){return n}}}();case a.symbolDiamond:return function(){var e=d(c),n=d(s);return e.appendHeader(E).appendBody(D),n.appendHeader(K).appendBody(J),{vertex:function(){return e},fragment:function(){return n}}}();case a.symbolStar:return function(){var e=d(c),n=d(s);return e.appendHeader(S).appendBody(x),n.appendHeader(G).appendBody(q),{vertex:function(){return e},fragment:function(){return n}}}();case a.symbolWye:return function(){var e=d(c),n=d(s);return e.appendHeader(m).appendBody(V),n.appendHeader(X).appendBody(Q),{vertex:function(){return e},fragment:function(){return n}}}();default:throw new Error("Unrecognised symbol: ".concat(e))}var n,t},e.webglTypes=xe,e.webglUniform=o,Object.defineProperty(e,"__esModule",{value:!0})}));
